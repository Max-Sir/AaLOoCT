<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">
<link href="../../css/style.css" rel="stylesheet" type="text/css">
<title>Лекция №5</title>
<base target="_top">
</HEAD><BODY>
<div align="center">
  <p><strong>Тема № 5 &quot;Машинные методы умножения чисел в прямых кодах  &quot; </strong></p>
</div>
<strong> <p>Вопросы:</p> </strong>
<p>
- Машинные методы умножения. <br>
- Ускорение операции умножения.<br>

</p>
<strong> <p>Машинные методы умножения</p> </strong>
<p>
Операция умножения состоит из ряда последовательных сложений. Сложением управляют разряды множителя: если в очередном
разряде множителя содержится единица, то к сумме добавляется множимое. При этом, в зависимости от метода умножения, выполняется
сдвиг либо множимого, либо частичной суммы. Наряду с этим умножение можно начинать как с младших, так и со старших разрядов
множителя. Для умножения используют модули сомножителей. Знак произведения определяется сложением по модулю 2 знаковых разрядов сомножителей. </p>
<img src="../../images/lk5/1.jpg">
<p>Остановимся более подробно на реализации умножения согласно алгоритму  А.</p>
<img src="../../images/lk5/2.jpg">
<p>Ниже приведены (без вывода) остальные три реализации алгоритмов (Б, В и Г) умножения.</p>
<img src="../../images/lk5/3.jpg">
<p>Структурные схемы операционных устройств, выполняющих умножение по  алгоритмам А, Б, В и Г, приведены на рис 6. <br>
Рассмотрим пример умножения чисел согласно алгоритму А.</p>
<img src="../../images/lk5/4.jpg">
<p>Заметим, что при умножении чисел по алгоритму А на отдельных этапах операции возможно переполнение (попадание значащей
единицы в знаковый разряд). Однако при последующем сдвиге переполнение устраняется. При использовании других алгоритмов (Б, В, Г)
переполнения не возникает. </p>
<img src="../../images/lk5/5.jpg">
<p>
Время умножения чисел по алгоритму А   tумн = ( tсл + tсдв ) * n, где n - число разрядов Мт. Следовательно, сдвиг и сложение нельзя
выполнять в одном автоматном такте. Это наглядно показано на рис 7.</p>
<img src="../../images/lk5/6.jpg">
<p>
<b>Ускорение операции умножения</b><br>
Арифметические операции, к числу которых относится умножение, часто встречаются при решении задач на ЭВМ. Умножение является длинной
операцией. Временные затраты на умножение чисел в прямых кодах можно оценить по формуле</p>
<img src="../../images/lk5/7.jpg">
<p>
где p<sub>i</sub> – вероятность появления единицы в разрядах множителя, t<sub>сл</sub> – время формирования очередной частичной суммы, t<sub>сдв</sub>
– время выполнения сдвига числа на один разряд. <br>
Анализируя выражение (3), можно предложить различные пути сокращения величины Т<sub>умн</sub> : уменьшение времени на сдвиг, на формирование
очередной суммы, уменьшение числа разрядов множителя. Этого можно достигнуть логическими или аппаратными методами. Рассмотрим логические
методы ускорения умножения.<br>
Один из наиболее простых способов состоит в том, чтобы при наличии нулевого разряда в множителе не выполнять формирование очередного
(нулевого) частичного произведения, не изменяющего содержимое сумматора. В зависимости от используемого алгоритма умножения выполняется
сдвиг либо частичной суммы, либо частичного произведения без выполнения суммирования.<br>
<b>Умножение с хранением переносов</b><br>
Время, затрачиваемое на сложение двоичных чисел, состоит из времени, необходимого для поразрядного сложения, и времени
на формирование переноса </p>
<img src="../../images/lk5/8.jpg">
<p>
Поразрядное сложение является элементарной операцией, и время на эту операцию может быть сокращено путем использования более
быстродействующих элементов. В то же время если исключить необходимость выполнения межразрядных переносов при сложении, то время
умножения уменьшится на t<sub>пер</sub>. Переносы, формируемые при сложении, записываются в отдельный регистр. Содержимое этого регистра
добавляется в сумматор вместе с очередым частичным произведением. При этом сложение может выполняться паралельно по всем разрядам.
На последнем такте (при умножении на последний разряд множителя) сложение выполняется с учетом межразрядных переносов. В заключение
следует отметить, что этот метод  используется с алгоритмом A.</p>
<img src="../../images/lk5/9.jpg">
<p>
<b>Умножение на два разряда множителя одновременно</b><br>
Разбиение множителя на группы длиной k разрядов означает переход к новой системе счисления с основанием 2k. Если при этом удается
сократить количество элементарных действий, выполняемых при умножении (сложение и сдвиги), то сокращается время умножения.
Остановимся более подробно на умножении на два разряда множителя за один такт (k=2). Это связано с анализом пар разрядов множителя. 
Возможны четыре случая сочетания разрядов множителя: 00, 01, 10, 11. Умножение на каждую из пар разрядов множителя должно выполняться
за один такт автоматного времени, то есть в каждом такте умножения должно выполняться не более одного сложения. Рассмотрим умножение
на эти пары на примере алгоритма А.	</p>
<img src="../../images/lk5/10.jpg">
<p>
При умножении на пару 11 (к частичной сумме необходимо добавить утроенное множимое) ее можно представить в виде<br>
11 = (22 - 1)<br>
Мн * 11= Мн*(22 - 1) = Мн*2<sup>2</sup>- Мн, то есть в текущем такте к частичной сумме добавляется множимое, взятое со знаком минус.
Добавление Мн*2<sup>2</sup> реализуется путем увеличения на единицу следующей старшей пары разрядов.<br>
В табл.1 представлены правила преобразования множителя для системы (0,1,1).</p>
<img src="../../images/lk5/11.jpg">
<p>
<b>Время умножения на два разряда множителя одновременно</b><br>
Появление любой из рассматриваемых пар множителей равновероятно. Следовательно, время умножения на два разряда множителя может
быть выражено следующим соотношением: </p>
<img src="../../images/lk5/12.jpg">
<p>где n – количество разрядов множителя. </p>
</BODY>
</HTML>