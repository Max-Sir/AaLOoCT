<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">
<link href="../../css/style.css" rel="stylesheet" type="text/css">
<title>Лекция №14</title>
<base target="_top">
</HEAD><BODY>
<div align="center">
  <p><strong>Тема № 14 &quot; минимизации функций алгебры логики &quot; </strong></p>
</div>
<strong> <p>Вопросы:</p> </strong>
<p>
- Минимизация ФАЛ методом Квайна (Квайна Мак Класки). <br>
- Минимизация ФАЛ картами Вейча (Карно). Принцип построения карт. Примеры построения карт для функций для
2,3,4,5 переменных и минимизация. <br>
- Минимизация неполностью определенных (частичных) функций.<br>

</p>
<strong> <p>Минимизация ФАЛ</p> </strong>
<p>
При проектировании цифровых автоматов широко используются методы минимизации булевых функций, позволяющие получать
экономичные схемы. Общая задача минимизации булевых функций может быть сформулирована следующим образом: найти
аналитическое выражение заданной булевой функции в форме, содержащей минимально возможное число букв. Следует отметить,
что в общей постановке данная задача пока не решена, однако достаточно хорошо исследована в классе дизъюнктивно-конъюнктивных форм.
Минимальной дизъюнктивной нормальной формой (МДНФ) булевой функции называется ДНФ, содержащая наименьшее число букв (по отношению ко всем
другим ДНФ, представляющим заданную булеву функцию). <br>
Булева функция g(x<sub>1</sub>,...,x<sub>n</sub>) называется импликантой булевой функции f(x<sub>1</sub>,...,x<sub>n</sub>), если для любого набора переменных, на котором
g=1, справед-ливо f=1.</p>
<img src="../../images/lk14/1.jpg">
<p>
Импликанта g булевой функции f, являющаяся элементарной конъюнкцией, называется простой, если никакая часть импликанты
g не является импликантой функции f. <br>
Из примера видно, что импликанты g<sub>3</sub> = x<sub>1</sub>x<sub>2</sub> и g<sub>5</sub> = x<sub>2</sub>x<sub>3</sub> являются простыми импликантами функции f. Импликанты g1, g2, g4, g<sub>6</sub>
не являются простыми, так как их части являются импликантами функции f, например g1 является частью g3. Приведем без доказательства<
два утверждения, полезные при получении минимальной ДНФ. <br>
1. Дизъюнкция любого числа импликант булевой функции f также является импликантой этой функции. <br>
2. Любая булева функция f эквивалентна дизъюнкции всех своих простых импликант. Такая форма представления булевой функции
называется сокращенной ДНФ. <br>
Перебор всех возможных импликант для булевой функции f из рассмотренного примера дает возможность убедиться, что простых
импликант всего две: g<sub>3</sub> и g<sub>5</sub>. Следовательно,  сокращенная  ДНФ  функции  f  имеет  вид <br>
f= g<sub>3</sub> + g<sub>5</sub> = x<sub>1</sub>x<sub>2</sub> + x<sub>2</sub>x<sub>3</sub>. <br>
Как видно из табл. 12, импликанты g3, g5 в совокупности покрывают своими единицами все единицы функции f. Получение
сокращенных ДНФ является первым этапом отыскания минимальных форм булевых функций. Как уже отмечалось, в сокращенную ДНФ
входят все простые импликанты булевой функции. Иногда из сокращенной ДНФ можно убрать одну или несколько простых импликант,
удаление которых не приводит к изменению значений функции на всевозможных значениях ее переменных. Такие простые импликанты
назовем лишними. <br>
Сокращенная ДНФ булевой функции называется тупиковой, если в ней отсутствуют лишние простые импликанты.<br>
Исключение лишних простых импликант из сокращенной ДНФ булевой функции не является однозначным процессом, то есть булева
функция может иметь несколько тупиковых ДНФ.<br>
Тупиковые ДНФ булевой функции f, содержащие минимальное число букв, являются минимальными (МДНФ). МДНФ тоже может быть несколько.
Минимизировать функции, то есть находить наиболее простое выражение для исходной функции, можно различными методами. Все они
практически различаются лишь на первом этапе - этапе получения сокращенной ДНФ. Следует отметить, что, к сожалению, поиск МДНФ
всегда связан с некоторым перебором решений. Рассмотрим некоторые из них.
<b>Метод Квайна</b><br>
Теорема Квайна. Для получения минимальной формы логической функции необходимо в СДНФ произвести все возможные склеивания
и поглощения, так чтобы в результате была получена сокращенная ДНФ. Сокращенная ДНФ в общем случае может содержать лишние
простые импликанты, которые необходимо выявить на втором этапе минимизации.<br>
На первом этапе выполняется переход от функции, заданной в форме СДНФ, к сокращенной ДНФ. Это основано на использовании
следующих соотношений:<br>
1) соотношение неполного склеивания</p>
<img src="../../images/lk14/2.jpg">
<p>
 - две конъюнкции, а F - любое элементарное произведение;<br>
2) соотношение поглощения </p>
<img src="../../images/lk14/3.jpg">
<p>
Справедливость обоих соотношений легко проверяется. Суть метода заключается в последовательном выполнении всех возможных
склеиваний и затем всех поглощений, что приводит к сокращенной ДНФ. Метод применим к совершенной ДНФ. Из соотношения
поглощения следует, что произвольное элементарное произведение поглощается любой его частью. Для доказательства достаточно
показать, что произвольная простая импликанта р = x<sub>i1</sub>x<sub>i2</sub> ... x<sub>in</sub> может быть получена. В самом деле, применяя к р операцию
развертывания (обратную операции склеивания)</p>
<img src="../../images/lk14/4.jpg">
<p>
по всем недостающим переменным x<sub>ik</sub>, ..., x<sub>im</sub> исходной функции f, получаем совокупность S конституент единицы. При
склеивании всех конституент из S получим импликанту р. Последнее очевидно, поскольку операция склеивания обратна операции
развертывания. Множество S конституент обязательно присутствует в совершенной ДНФ функции f, поскольку р - ее импликанта.
В результате выполнения склеивания получается конъюнкция n-1 ранга, а конъюнкции  Fx и  F<span class="overline">x</span> остаются в исходном выражении и участвуют
в сравнении с другими членами СДНФ. В результате выполнения склеивания получается конъюнкция n-1 ранга, а конъюнкции   и   остаются в исходном выражении и участвуют в сравнении с другими членами СДНФ.Таким образом, удается снизить ранг термов.<br>
Склеивание и поглощение выполняются до тех пор, пока имеются члены, не участвовавшие в попарном сравнении. Термы, подвергшиеся
операции склеивания, отмечаются. Неотмеченные термы представляют собой простые импликанты и включаются в сокращенную ДНФ. Все
отмеченные конъюнкции ранга n-1 подвергаются вновь операции склеивания до получения термов n-2 ранга и так далее до тех пор, пока
количество неотмеченных конъюнкций больше 2. В результате выполнения первого этапа получена сокращенная ДНФ.
Полученное логическое выражение не всегда оказывается минимальным. На втором этапе переходят от сокращенной ДНФ к тупиковым ДНФ
и среди них выбирают МДНФ.<br>
Для формирования тупиковых ДНФ строится импликантная таблица (матрица), строки которой отмечаются простыми импликантами
сокращенной ДНФ, а столбцы - конституентами единицы исходной СДНФ. В строке напротив каждой простой импликанты ставится метка
под теми наборами (конституентами единицы), на которых она принимает значение 1. Соответствующие конституенты поглощаются
(покрываются) данной простой импликантой.<br>
Из общего числа простых импликант необходимо отобрать их минимальное число, исключив лишние. Формирование тупиковых форм и
выбор минимального покрытия начинается с выявления обязательных простых импликант, то есть таких, которые (и только они) покрывают
некоторый исходный набор. Рассмотрим пример минимизации методом Квайна логической функции:</p>
<img src="../../images/lk14/5.jpg">
<p>В результате выполнения первого шага склеивания получаем четыре новые конъюнкции, простых импликант не выявлено.
Полученные конъюнкции более не склеиваются и образуют сокращенную ДНФ.</p>
<img src="../../images/lk14/6.jpg">
<p>
Для выявления обязательных простых импликант и формирования на их основе минимального покрытия строится импликантная
таблица (табл. 13). В строках импликантной таблицы записываются простые импликанты, а в столбцах - конституенты единицы.
Звездочка ставится, если простая импликанта покрывает конституенту.</p>
<img src="../../images/lk14/7.jpg"><br>
<img src="../../images/lk14/89.jpg"><br>
<img src="../../images/lk14/10.jpg">
<p>
<b>Метод Блейка - Порецкого</b><br>
Метод позволяет получать сокращенную ДНФ булевой функции f из ее произвольной ДНФ. Базируется на применении
формулы обобщенного склеивания: </p>
<img src="../../images/lk14/11.jpg">
<p><b>Метод минимизирующих карт Карно (Вейча)</b><br>
При минимизации логической функции от небольшого числа переменных удобным является графический метод представления
функции с помощью диаграмм (карт) Вейча и их разновидности - Карно. Карта Вейча представляет собой развертку n-мерного
куба на плоскости. При этом  вершины куба представляются клетками карты, каждой из которых поставлена в соответствие
конститутиента единицы или нуля. Переменные, обозначающие клетки диаграммы, расставляются таким образом, чтобы наборы,
записанные в двух смежных клетках, имели кодовое расстояние, равное единице. Поскольку такие наборы располагаются в смежных
клетках, они получили название соседних наборов. В клетку карты, соответствующую конституенте единицы, заносится 1, иначе - 0.
Таким образом, для минимизации функции она должна быть представлена в форме СДНФ. Минимизация булевой функции с использованием
карт в дизъюнктивной (конъюнктивной) форме заключается в объединении единичных (нулевых) клеток в контуры, каждому такому контуру
соответствует простая импликанта.  <br>
Можно сформулировать следующие правила минимизации:<br>
- количество клеток карты в одном контуре должно быть равно 2n;<br>
- для контура, содержащего 2n клеток, должно быть n осей симметрии;<br>
- количество контуров должно быть минимально;<br>
- число единиц в контуре должно быть максимально;<br>
- контуры могут пересекаться, то есть некоторая клетка может входить в несколько контуров.</p>
<img src="../../images/lk14/12.jpg">
<p>
<b>Минимизация конъюнктивных нормальных форм</b><br>
Минимизация КНФ производится аналогично рассмотренным методам минимизации ДНФ булевых функций, поэтому остановимся лишь
на основных положениях.<br>
Напомним, что конституентой нуля называется функция, принимающая значение 0 на одном наборе. Она выражается дизъюнкцией всех
переменных функций. Например, набору 0110 соответствует конституента нуля x1+<span class="overline">x2</span>+<span class="overline">x3</span>+x4.<br>
Имплицентой g булевой функции f называется функция, принимающая значение 0 на подмножестве нулевых наборов функции f.
Простой имплицентой функции f называется элементарная дизъюнкция, являющаяся имплицентой функции f, причем никакая ее собственная
часть имплицентой функции f не является. <br>
Задачей минимизации КНФ является определение минимальной КНФ. Эта задача также решается в два этапа: поиск сокращенной КНФ
(конъюнкция всех простых имплицент) и затем нахождение минимальной КНФ. Второй этап минимизации выполняется с помощью таблицы
Квайна точно так же, как и при поиске минимальной ДНФ, так как возможны только два варианта: либо данная простая имплицента 
поглощает данную конституенту нуля, либо нет в соответствии с соотношением поглощения:</p>
<img src="../../images/lk14/13.jpg">
<p><b>Минимизация не полностью определенных ФАЛ</b><br>
Если при синтезе логической схемы, реализующей некоторую ФАЛ n переменных, окажется, что некоторые наборы из общего числа 2n
никогда не смогут появиться на входах схемы, то данная логическая функция не определена на этих наборах. Тогда 2n наборов
переменных можно подразделить на три группы: множество наборов L, на которых функция принимает единичное значение, множество
наборов D, на которых функция принимает нулевое значение, и множество наборов N, на которых функция  не определена (неопределенные
наборы). ФАЛ, содержащая неопределенные наборы, называется не полностью или частично определенной. Неопределенные наборы могут быть
использованы для улучшения качества минимизации. При этом неопределенные наборы (при минимизации, например, картами Вейча, Карно)
могут участвовать в образовании контуров как с единичными, так и с нулевыми наборами. Это приводит к формированию более простой
минимизированной логической функции.</p>
<img src="../../images/lk14/14.jpg">
</BODY>
</HTML>