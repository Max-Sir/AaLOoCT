<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">
<link href="../../css/style.css" rel="stylesheet" type="text/css">
<title>Лекция №15</title>
<base target="_top">
</HEAD><BODY>
<div align="center">
  <p><strong>Тема № 15 &quot; Алгоритм извлечения (Рота)&quot; </strong></p>
</div>
<strong> <p>Вопросы:</p> </strong>
<p>
- Задание ФАЛ вершинами куба. Кубическое покрытие ФАЛ. <br>
- Специальные логические операции алгоритма Рота: * -умножение,  &cap;–пересечение, # -вычитание кубов. <br>
- Пример на минимизацию ФАЛ алгоритмом Рота.<br>

</p>
<strong> <p>Кубическое задание функций алгебры логики</p> </strong>
<p>
Как следует из рассмотренного выше, функция алгебры логики (булева функция) может быть задана:<br>
- аналитически (системой булевых функций);<br>
- словесным описанием; <br>
- таблицей истинности;<br>
- картами (диаграммами) Венна, Вейча, Карно;<br>
- логической схемой.<br>
Более компактной формой записи функций алгебры логики является форма, когда вместо полного перечисления всех конъюнкций
(дизъюнкций) используют номера наборов, на которых функция принимает единичное значение. Так, например, форма записи
f(x<sub>1</sub>x<sub>2</sub>x<sub>3</sub>)=V F(0,2,3) означает, что функция от трех переменных принимает единичное значение на 0, 2 и 3 наборах таблицы
истинности.  Такая форма записи называется числовой.<br>
Некоторые методы минимизации ориентируются на задание булевой функции в виде кубического покрытия. При этом логическая
функция удобно интерпретируется с использованием ее геометрического представления. Так, функцию двух переменных можно
интерпретировать как плоскость, заданную в системе координат х<sub>1</sub>х<sub>2</sub>.  Получится квадрат, вершины которого соответствуют
комбинациям переменных. Для геометрической интерпретации функции трех переменных используется куб, заданный в системе
координат х<sub>1</sub>х<sub>2</sub>х<sub>3</sub> .<br>
Новое представление булевой функции получается путем отображения булевой функции n переменных на n-мерный куб (n-куб). 
Для отображения булевой функции n переменных на n-кубе устанавливается соответствие между членами СДНФ и вершинами 
n-куба. На n-кубе определим координатную систему с координатами (e<sub>1</sub>,......,e<sub>n</sub>), e<sub>i</sub>=0,1. 
Установим соответствие между членом СДНФ x<sub>1</sub><sup>e1</sup> x<sub>2</sub><sup>e2</sup>... x<sub>n</sub><sup>en</sup> и некоторой вершиной e<sub>1</sub>,e<sub>2</sub>, ....,e<sub>n</sub>  куба. При этом<br>
x<sub>i</sub><sup>ei</sup> = x<sub>i</sub>, если e<sub>i</sub>=1, и x<sub>i</sub><sup>ei</sup> = x<sub>i</sub>, если e<sub>i</sub>=0. </p>
<img src="../../images/lk15/1.jpg">
<p>Над 0-кубами, кодовое расстояние которых равно 1, выполняется операция склеивания, в результате которой образуются
новые кубы, содержащие свободные координаты.<i> Свободная (независимая)</i> координата может принимать как нулевое, так и единичное
значение, остальные компоненты называются <i>связанными</i>. Куб, содержащий свободные координаты, покрывает кубы, на которых он
образован. Куб с одной независимой координатой х называется <i>кубом первой размерности</i> и в геометрическом представлении это
ребро, покрывающее обе вершины. Кубы, образующиеся в результате последовательного выполнения операции склеивания, назовем
r-кубами, где r – размерность полученного куба. <br>
Геометрическая интерпретация сказанного приведена на рис. 24. В ре-зультате склеивания кубов  101 и 111 (0-кубы, вершины)
образован 1-куб 1x1 (ребро), а 1-кубов 00x и 10х  - 2-куб х0х (грань).</p>
<img src="../../images/lk15/2.jpg">
<p>Кубическое представление ФАЛ позволяет обойтись тремя переменными 0,1,х вместо х<sub>1</sub>, х<sub>2</sub>,...,х<sub>n</sub> .<br>
Количество свободных координат в кубе определяет его размерность r, чем i-го куба. больше r, тем больше свободных координат
и тем меньше входов будет иметь реализующая его схема (логический элемент).<br>
Цена схемы определяется количеством входов элементов, используемых для ее реализации:</p>
<img src="../../images/lk15/3.jpg">
<p>где k - количество полученных кубов; n-r<sub>i</sub> -  количество единичных и нулевых значений<br>
Два r-куба могут образовать r+1-куб, если в этих r-кубах все координаты, в том числе и свободные, совпадают, за исключением лишь
какой-либо одной, которая в этих кубах имеет противоположное значение.<br>
На рис. 25 приведено изображение куба, соответствующего булевой функции от  четырёх переменных (гиперкуб).</p>
<img src="../../images/lk15/4.jpg">
<p>
Как следует из рисунка, геометрическое представление 4-куба уже довольно сложное. Поэтому для функций, зависящих более чем от
четырёх переменных, предпочтительным является аналитическое представление булевых функций.<br>
<b>Метод Квайна Мак-Класки</b><br>
Этот метод ориентирован на числовое задание ФАЛ в виде кубического комплекса, состоящего из 0-кубов. Метод представляет собой
формализованный на этапе нахождения простых импликант метод Квайна. Основной недостаток метода Квайна – необходимость выполнения
полного сравнения (склеивания) всех первичных импликант. В случае большого их количества сложность этого сравнения существенно
возрастает. В рассматриваемом методе все исходные n-кубы разбиваются на непересекающиеся подгруппы по количеству единиц в кубе.<br>
Пусть, например, задана функция      <br>
f СДНФ(x<sub>1</sub>x<sub>2</sub>x<sub>3</sub>x<sub>4</sub>) = V (2, 3, 4, 6, 9, 10, 11, 12).<br>
Сформируем кубический комплекс K, состоящий из 0-кубов:<br>
K=(0010, 0011, 0100, 0110, 1001, 1010, 1011, 1100).<br>
Выполнив разбиение комплекса K на группы, получим: </p>
<img src="../../images/lk15/5.jpg">
<p>Попарное сравнение можно проводить только между соседними по номеру группами кубов, так как кубы, порождающие новые кубы,
должны иметь кодовое расстояние, равное 1. В результате сравнения кубов получим:</p>
<img src="../../images/lk15/6.jpg">
<p>После выполнения первого шага алгоритма простых импликант не выявлено. Полученные 1-кубы разобьем на n групп кубов в
зависимости от местоположения свободной координаты в кубе.</p>
<img src="../../images/lk15/7.jpg">
<p>
Далее выполняется сравнение кубов внутри каждой из групп. В результате могут быть получены 2-кубы, которые, в свою очередь,
аналогично 1-кубам будут объединены в группы по совпадению свободных координат и вновь будет выполнено сравнение. На каждом
шаге сравнения выявляются кубы, не участвовавшие в образовании новых кубов, и исключаются из дальнейшего упрощения. Для
рассматриваемого примера сравнение в группах  K<sub>1</sub><sup>1</sup> …K<sub>4</sub><sup>1</sup>   привело к образованию двух новых кубов  х01х и х01х и кубов, не образовавших
новых {х100, 0х10, 10х1, 01х0}.</p>
<img src="../../images/lk15/8.jpg">
<p>Далее аналогично методу Квайна строится импликантная таблица (табл.15). Формирование минимального покрытия сводится к
выявлению обязательных простых импликант и построению на их основе тупиковых форм.</p>
<img src="../../images/lk15/9.jpg">
<p>
Из таблицы следует, что простые импликанты x100, 10x1, x01x являются обязательными. Оставшиеся две простые импликанты не
являются обязательными и образуют следующие две тупиковые формы.<br>
f МДНФ =  {х100, 10х1, х01х, 0х10} – 1-я тупиковая форма;<br>
f МДНФ =  {х100, 10х1, х01х, 01x0} – 2-я тупиковая форма.<br>
<b>Алгоритм извлечения  (Рота)</b><br>
Метод  Рота ориентируется на задание логической функции в форме произвольного кубического покрытия, что позволяет упростить
процесс подготовки выражения для минимизации. Достоинство алгоритма Рота – полная формализация действий на всех этапах
минимизации функции.<br>
<b>Специальные логические операции алгоритма Рота: *, &cap; , <font face="webdings"> # </font> </b><br>
Реализация алгоритма извлечения осуществляется на основе специальных логических операций, которые позволяют полностью
формализовать процесс получения минимальной формы.<br>
<b>Операция умножения кубов (*)</b>. Операция умножения кубов а=а<sub>1</sub>а<sub>2</sub>...а<sub>n</sub> и b=b<sub>1</sub>b<sub>2</sub>...b<sub>n</sub> обозначается как с=а*b и служит для
образования r-куба, противоположные (r-1) грани которого содержатся в кубах а и b. Предварительные координаты куба c
определяются в соответствии с таблицей, приведенной ниже.</p>
<img src="../../images/lk15/10.jpg">
<p>Операция пересечения кубов (&cap;). Операция  пересечения кубов а=а<sub>1</sub>а<sub>2</sub>...а<sub>n</sub> и b=b<sub>1</sub>b<sub>2</sub>...b<sub>n</sub> обозначается как с=а&cap;b и служит
для выделения куба с=с<sub>1</sub>с<sub>2</sub>...с<sub>n</sub>  , являющегося общей частью кубов а и b. Координаты с<sub>1</sub>с<sub>2</sub>...с<sub>n</sub> определяются согласно следующей<br>
таблице.</p>
<img src="../../images/lk15/11.jpg">
<p>
где z означает, что координаты совпадают, а y, как для операции *, означает, что координаты a<sub>i</sub> и b<sub>i</sub> противоположны.
По этим  &alpha;<sub>i</sub>-координатам производится объединение (&cup;) кубов, получаемых в результате замены в кубе а символа х на
соответствующее значение (0,1) координаты &alpha;<sub>i</sub>.	Рассмотрим примеры выполнения операции # и их графическую интерпретацию
(рис. 28).</p>
<img src="../../images/lk15/12.jpg">
<p>
Исходное покрытие С0 задано объединением множеств кубов L и N. Кубы комплекса N ? это наборы, на которых функция не определена и которые
включаются в покрытие ради возможного дополнительного упрощения ком-плекса L в процессе минимизации. Минимальное покрытие комплексов L и
N, С <sub>min</sub> называется К-покрытием L.<br>
Общий алгоритм построения минимального К-покрытия называется алгоритмом извлечения и состоит в следующем:<br>
- нахождении множества Z простых импликант комплекса К;<br>
- выделении L-экстремалей на множестве Z;<br>
- применении алгоритма ветвления при отсутствии L-экстремалей;<br>
- нахождении абсолютно минимального покрытия из некоторого множества избыточных покрытий.<br>
1.<b>Нахождение множества простых импликант</b> <br>
Преобразование исходного покрытия С0 комплекса К в множество про-стых импликант Z осуществляется с помощью операции умножения кубов.
В результате первого шага (С<sub>0</sub>*С<sub>0</sub>) (табл. 16) предусматривается выявление как новых кубов Сy (первой и более высокой размерности), так
и кубов, которые не образуют новых кубов (включаются в множество Z0). Из полученных новых кубов образуется множество А<sub>1</sub>. Также формируется
множество В<sub>1</sub>=С<sub>0</sub>-Z<sub>0</sub>. Для следующего шага получения множества Z формируется множество С<sub>1</sub>=А<sub>1</sub> &cup; В<sub>1</sub>. Для уменьшения мощности множества кубов С<sub>1</sub>
выполним операцию поглощения (удаления) кубов, образующих множество С<sub>1</sub>,  кубами из множества А1 (А<sub>1</sub>&sube;С<sub>1</sub>). </p>
<img src="../../images/lk15/13.jpg">
<p>
2.<b>Определение L-экстремалей</b><br>
Множество Z может быть избыточным. Прежде всего необходимо выявить обязательные простые импликанты, называемые в алгоритме извлечения
L-экстремалями. L-экстремаль – это куб, который (и только он) покрывает некоторую вершину из множества L, не покрываемую никаким другим
кубом из множества Z. <br>
Для определения L-экстремалей воспользуемся операциями вычитания (#) (табл. 19) и пересечения (&cap;) кубов (табл.20). В табл. 19 z &sube; Z –
некоторая простая импликанта, из которой вычитаются остальные Z-z.</p>
<img src="../../images/lk15/14.jpg">
<p>1. Если результат вычисления будет &empty; хотя бы в одном, любом случае, то это значит, что среди простых импликант есть такие
кубы, которые покрывают уменьшаемый, а следовательно, этот уменьшаемый не может быть L-экстремалью.<br>
2. Если же полученный результат не &empty;, то в противоположность предыдущему утверждению уменьшаемый куб оказывается кубом большей
размерности по отношению к другим простым импликантам.<br>
3. Что касается простых импликант, ”удаленных” от уменьшаемой, то они с ней дают координаты ”y” и, таким образом, остается уменьшаемый
куб при вычитании этих ”удаленных”  кубов.<br>
После выявления L-экстремалей следует выяснить, не являются ли некоторые из них простыми импликантами, остатки которых покрывают 
только некоторое подмножество кубов комплекса N, которое нет необходимости покрывать, вводя в минимальное покрытие соответствующие 
наборы. Для этого необходимо выполнить операцию пересечения остатков, полученных при выполнении операции z#(Z-z) с кубами из комплекса
L. Во множестве E необходимо оставить только те кубы, остатки от которых пересекаются с кубами из комплекса L. </p>
<img src="../../images/lk15/15.jpg">
<p>
Из таблицы видно, что куб 1x01 не пересекается с кубами комплекса L. Однако куб x101 имеет с кубом 0x01 (из комплекса L)
общую вершину 0101. Оба куба (1x01, x101) входят в куб более высокой размерности xx01 (L-экстремаль). Таким образом, куб 1x01,
образованный на комплексе N, позволил уменьшить цену схемы. Выясним далее, какие из вершин комплекса L не покрываются L-экстремалями.
Для этого из каждого куба комплекса L вычтем (#) элементы множества Е (табл.21). В результате вычитания получим L1=L#Е.</p>
<img src="../../images/lk15/16.jpg">
<p>
<b>Минимизация ФАЛ методом преобразования логических выражений</b><br>
Рассмотрим подход к упрощению ФАЛ, заключающийся в применении к ней скобочных преобразований. Пусть имеется функция <br>
f=x<sub>1</sub>x<sub>3</sub>x<sub>4</sub>x<sub>6</sub>+x<sub>2</sub>x<sub>3</sub>x<sub>4</sub>x<sub>6</sub> + x<sub>5</sub>x<sub>6</sub> + x<sub>7</sub>.<br>
Применим к ней скобочные преобразования, в результате чего получим функцию  f=((x<sub>1</sub>+x<sub>2</sub>)x<sub>3</sub>x<sub>4</sub> + x<sub>5</sub>)x<sub>6</sub> + x<sub>7</sub>.<br>
Из выражений видно, что цена схемы до минимизации была равна 14, после стала равна 11. Таким образом, общая стоимость<br>
схемы сократилась, однако исходной функции соответствовала схема, имеющая два уровня элементов, а преобразованной - пять<br>
уровней. Таким образом, полученная схема будет работать примерно в 2,5 раза медленнее исходной.</p>
</BODY>
</HTML>