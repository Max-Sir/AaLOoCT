<!-- (C) 2004-06 Nick G Shchetko, Anatoly A Matveev for Military Faculty, BSUIR -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">
<link href="../../css/style.css" rel="stylesheet" type="text/css">
<title>Лекция №12</title>
<base target="_top">
</HEAD><BODY>
<div align="center">
  <p><strong>Тема № 12 &quot; Логические основы цифровых автоматов &quot; </strong></p>
</div>
<strong> <p>Вопросы:</p> </strong>
<p>
- Простые и сложные высказывания, двоичные аргументы и  переключательные (булевы) функции (ПФ). Таблица истинности ПФ. <br>
- Основные законы булевой алгебры. <br>
- Основные определения: конъюнкция, дизъюнкция, ранг, формы представления ПФ, кодовое расстояние, и др. Запись ПФ в
различных формах, их взаимосвязь. <br>
- Понятие покрытия переключательной функции. Диаграммы Венна.<br>

</p>
<p><b>Двоичные переменные и булевы функции</b><br>
Для формального описания устройств вычислительной техники при их анализе и синтезе используется аппарат алгебры логики. Алгебру логики называют также булевой алгеброй. Основными понятиями алгебры логики являются двоичные переменные и переключательные (булевы) функции.<br>
<i>Двоичные переменные</i> могут принимать только два значения: 0 (ложь) и 1 (истина) ? и обозначаются символами x<sub>1</sub>, x<sub>2</sub>, ...., x<sub>n</sub>. Двоичные (логические, булевы) переменные являются аргументами булевых (переключательных) функций.<br>
Функция f, зависящая от n переменных x<sub>1</sub>, x<sub>2</sub>, ...., x<sub>n</sub>, называется булевой, или переключательной, если функция f и любой из ее аргументов x<sub>i</sub>, (i = 1...n) принимают значения только из множества {0, 1}. <br>
Иначе говоря, булева функция – это функция, и аргументы и значение которой принадлежат множеству { 0, 1 }. Множество { 0, 1 } обозначим через B. <br>
Булеву функцию от n аргументов можно рассматривать как n-местную алгебраическую операцию на множестве B. При этом алгебра &#60;B;&Omega;&#62;, где &Omega;– множество всевозможных булевых функций, называется<i> алгеброй логики (булевой алгеброй)</i>. <br>
Конечность области определения функции имеет существенное достоинство: такие функции можно задавать перечислением значений при различных значениях аргументов. Для того чтобы задать значение функции от n переменных, надо определить значения для каждого из 2<sup>n</sup> возможных наборов. Эти значения записывают в таблицу истинности в порядке соответствующих двоичных чисел (рассмотрим позже). <br>
x1 x2 	... xn-1  xn  f 
0 	0 	... 0   0    f(0,0,...,0,0) <br>
0 	0 	... 0   1    f(0,0,...,0,1) <br>
0 	0 	... 1   0    f(0,0,...,1,0) <br>
0 	0 	... 1   1    f(0,0,...,1,1) <br>
...	...	... ...  ...      ... <br>
1 	1 	... 0   1    f(1,1,...,0,1) <br>
1 	1 	... 1   0    f(1,1,...,1,0) <br>
1 	1 	... 1   1    f(1,1,...,1,1) <br>
Для того чтобы задать функцию, достаточно выписать значения f(0,0,...,0,0), f(0,0,...,0,1), f(0,0,...,1,0), f(0,0,...,1,1),..., f(1,1,...,0,0), f(1,1,...,0,1), f(1,1,...,1,0), f(1,1,...,1,1). Этот набор называют <i>вектором значений функции</i>. <br>
Таким образом, булевы функции на конечном множестве своих аргументов могут принимать значения 0 и 1 и обозначаются f(x<sub>1</sub>,x<sub>2</sub>, … ,x<sub>n</sub>). Булевы функции могут служить аргументами более сложных логических функций.<br>
<b>Способы задания булевых функций</b><br>
Для задания произвольной булевой функции широко используются <b>табличный (матричный)</b> и <b>аналитический</b> способы. При табличном способе булева функция f (х<sub>1</sub>, ...,х<sub>n</sub>) задается таблицей истинности (табл. 7), в левой части которой представлены все возможные двоичные наборы длины n, а в правой указываются значения функции на этих наборах.</p>
<img src="../../images/lk12/1.jpg">
<p>
Под двоичным набором понимается совокупность значений аргументов x<sub>1</sub>, x<sub>2</sub>, ...., x<sub>n</sub> булевой функции f. Двоичный набор имеет длину n, если он представлен n цифрами из множества {0,1}. В табл. 7 представлены все двоичные наборы длиной 3. Иногда двоичные наборы из таблицы истинности булевой функции удобно представлять их номерами. Запишем аргументы x<sub>1</sub>, x<sub>2</sub>, ...., x<sub>n</sub> в порядке возрастания их индексов. Тогда любому двоичному набору можно поставить в соответствие целое десятичное число N, называемое номером набора. Например, двоичные наборы <b>011</b> и <b>101</b> имеют номера <b>3</b>и <b>5</b> соответственно. Булевы функции, зависящие от большого числа переменных, задавать таблицей истинности неудобно в силу ее громоздкости. Например, таблица истинности булевой функции 8 переменных будет содержать 28 = 256 строк. Для задания функций многих переменных удобно использовать модификацию таблицы истинности. Рассмотрим способ построения такой таблицы истинности для функции n переменных. Множество из n переменных функции разбивается на два подмножества: х<sub>1</sub>, х<sub>2</sub>, ..., х<sub>j-1</sub> и х<sub>j</sub>, х<sub>j+1</sub>, ..., х<sub>n</sub>. Переменными x<sub>1</sub>, x<sub>2</sub>, ...., x<sub>n</sub> отмечают строки таблицы истинности, задавая в каждой строке значение соответствующего двоичного набора длины j-1. Переменными x<sub>j</sub>, x<sub>j+i</sub>, ..., x<sub>n</sub> отмечают ее столбцы, задавая в каждом столбце значения соответствующего двоичного набора длиной n-j+1. Значение функции записывается в клетке на пересечении соответствующей строки и столбца (табл. 8).<br>
При аналитическом способе булева функция задается формулой, то есть аналитическим выражением, построенным из операций булевой алгебры. Аналитический способ задания булевых функций занимает особое место в проектировании цифровых автоматов. Фактически все преобразования над булевыми функциями, необходимые для построения цифровых автоматов, ведутся на аналитическом уровне.</p>
<img src="../../images/lk12/2.jpg">
<p>
<b>Основные понятия алгебры  логики</b><br>
Существует не более чем 2<sub>к</sub> (где к=2<sub>n</sub>) различных булевых функций n переменных. К этому выводу легко прийти, пользуясь простыми комбинаторными рассуждениями, и вспомнив, что на каждом из 2<sub>n</sub> наборов функции могут принимать два значения.<br>
Функций от одной переменной четыре: это константа 0 (f0), константа 1 (f1), тождественная функция (f2), то есть функция, значение которой совпадает с аргументом, и функция отрицания (f3), значение которой противоположно значению аргумента. Отрицание будем обозначать x. <br>
x  f0 f1 f2 f3 <br>
0  0  1  0  1 <br>
1  0  1  1  0 <br>
Функции от некоторого числа переменных можно рассматривать как функции от большего числа переменных, при этом значения функции не меняются при изменении этих ''добавочных'' переменных. Такие переменные называются фиктивными, в отличие от остальных – существенных (действительных). <br>
Переменная x<sub>i</sub> называется <i>фиктивной</i> (несущественной) переменной функции f(x<sub>1</sub>,---,x<sub>n</sub>), если <br>
f(x<sub>1</sub>,---,x<sub>i-1</sub>,0,x<sub>i+1</sub>,---,x<sub>n</sub>) = f(x<sub>1</sub>,---,x<sub>i-1</sub>,1,x<sub>i+1</sub>,---,x<sub>n</sub>)<br>
для любых значений x<sub>1</sub>,---,x<sub>i-1</sub>,x<sub>i+1</sub>,---,x<sub>n</sub>. Иначе переменная x<sub>i</sub> называется существенной. <br>
Функции двух переменных представлены в табл. 9.</p>
<img src="../../images/lk12/3.jpg">
<p>
Отметим наиболее часто используемые функции из числа приведенных в таблице:<br>
f<sub>0</sub> (x<sub>1</sub>, x<sub>2</sub>) = 0 - тождественный ноль (константа 0);<br>
f<sub>1</sub> (x<sub>1</sub>, x<sub>2</sub>) = x<sub>1</sub> * x<sub>2</sub> - конъюнкция (логическое произведение, И). Иногда употребляется знак &amp; или /\;<br>
f<sub>3</sub> (x<sub>1</sub>, x<sub>2</sub>) = x<sub>1</sub> - повторение x<sub>1</sub>;<br>
f<sub>5</sub> (x<sub>1</sub>, x<sub>2</sub>) = x2 - повторение x<sub>2</sub>;<br>
f<sub>6</sub> (x<sub>1</sub>, x<sub>2</sub>) = x<sub>1</sub> &oplus; x<sub>2</sub> - сложение по модулю 2 или mod 2;<br>
f<sub>7</sub> (x<sub>1</sub>, x<sub>2</sub>) = x<sub>1</sub> + x<sub>2</sub> - дизъюнкция (логическое сложение, ИЛИ или V);<br>
f<sub>8</sub> (x<sub>1</sub>, x<sub>2</sub>) = x<sub>1</sub> &darr; x<sub>2</sub> - функция Вебба (стрелка Пирса, ИЛИ-НЕ); <br>
f<sub>9</sub> (x<sub>1</sub>, x<sub>2</sub>) = x<sub>1</sub> &tilde; x<sub>2</sub> - эквивалентность;<br>
f<sub>13</sub>(x<sub>1</sub>, x<sub>2</sub>) = x<sub>1</sub> &rarr; x<sub>2</sub> - импликация;<br>
f<sub>14</sub>(x<sub>1</sub>, x<sub>2</sub>) = x<sub>1</sub> \ x<sub>2</sub> - штрих Шеффера (И-НЕ);<br>
f<sub>15</sub>(x<sub>1</sub>, x<sub>2</sub>) = 1 - тождественная единица (константа 1).<br>
Основными операциями булевой алгебры являются: отрицание, логическое сложение и логическое умножение. В булевой алгебре возведение в степень и извлечение корня являются вырожденными логическими операциями, поскольку значения, принимаемые аргументами при возведении в степень и извлечении корня, остаются неизменными, если принять справедливость равенств 1*1= 1 и 0*0= 0. Операции вычитания и деления не рассматриваются и не допускаются.<br>
<b>Логическое отрицание (функция НЕ)</b>. Логическим отрицанием высказывания x называется такое сложное высказывание f(x), которое истинно, когда x ложно, и  наоборот. Функция НЕ записывается  следующим образом: f1=x. Условное  изображение  элемента  реализующего  функцию  НЕ  приведено  на 
рис. 13,а.<br>
<b>Логическое умножение (конъюнкция)</b>. Конъюнкция (функция И) двух переменных x<sub>1</sub> и x<sub>2</sub> ? это сложное высказывание, которое истинно только тогда, когда истинны x<sub>1</sub> и x<sub>2</sub>, и ложно для всех остальных наборов переменных. Логическая функция конъюнкции имеет вид f=x<sub>1</sub>*x<sub>2</sub>. Для обозначения операции конъюнкции используются также символы &amp; и &and;. Функция логического умножения (И) от n переменных имеет вид f<sub>2</sub>=(x<sub>1</sub>, x<sub>2</sub>, …, x<sub>n</sub>)= x<sub>1</sub>*x<sub>2</sub>* … *x<sub>n</sub> =  &and; x<sub>i</sub>. Условное изображение элемента, реализующего операцию логического умножения, приведено на рис.13,б.<br>
<b>Логическое сложение (дизъюнкция)</b>. Дизъюнкция (функция ИЛИ) двух переменных x<sub>1</sub> и x<sub>2</sub> – это сложное высказывание, которое истинно тогда, когда истинна хотя бы одна из переменных x<sub>1</sub> и x<sub>2</sub>, и ложно, когда они обе ложны. Логическая функция дизъюнкции имеет вид f=x<sub>1</sub>+x<sub>2</sub>. Для обозначения операции дизъюнкции используется также символ &or;. Функция логического сложения (ИЛИ) от n переменных имеет вид f<sub>2</sub>=(x<sub>1</sub>, x<sub>2</sub>, …, x<sub>n</sub>)= x<sub>1</sub>+x<sub>2</sub>+ … +x<sub>n</sub> =  &or; x<sub>i</sub>. Условное изображение элемента, реализующего операцию логического сложения, изображено на рис.13,в.<br>
<b>Отрицание конъюнкции (операция Шеффера)</b>. Отрицание конъюнкции  (функция И-НЕ) двух переменных x<sub>1</sub> и x<sub>2</sub> – сложное высказывание, ложное только при истинности обоих аргументов x<sub>1</sub> и x<sub>2</sub>. Логическая функция      И-НЕ имеет вид f=<span class="overline">x<sub>1</sub>*x<sub>2</sub></span>.  Условное изображение элемента реализующего указанную операцию, изображено на рис. 13,г и называется элементом Шеффера или элементом И-НЕ.<br>
<b>Отрицание дизъюнкции (операция Пирса (Вебба))</b>. Отрицание дизъюнкции  (функция ИЛИ-НЕ) двух переменных x<sub>1</sub> и x<sub>2</sub> – сложное высказывание, истинное только тогда, когда оба аргумента принимают ложное значение. Логическая функция ИЛИ-НЕ имеет вид f=<span class="overline">x<sub>1</sub>+x<sub>2</sub></span>.  Условное изображение элемента, реализующего указанную операцию, приведено на рис.13,д и называется элементом Пирса или элементом ИЛИ-НЕ.<br>
<b>Сложение  по  модулю  2 (исключающее ИЛИ)</b>. Сложение по модулю 
2 - это сложное высказывание, которое истинно только тогда, когда истинна только одна из  переменных x<sub>1</sub> и x<sub>2</sub>. Логическая функция ”сумма по модулю 2” имеет вид f=x<sub>1</sub>&oplus;x<sub>2</sub>.  Если число переменных n>2, то функция истинна на тех наборах, в которых число единиц нечетно. Условное изображение элемента, реализующего операцию сумма по модулю два, изображено на рис. 13,е.</p>
<img src="../../images/lk12/4.jpg">
<img src="../../images/lk12/5.jpg">
<p>
Суперпозиция функций одного аргумента порождает функции одного аргумента. Суперпозиция функций двух аргументов дает возможность строить функции любого числа аргументов. Суперпозиция булевых функций представляется в виде логических формул. Однако следует отметить:<br>
-	одна и та же функция может быть представлена разными формулами; <br>
-	каждой формуле соответствует своя суперпозиция и, следовательно, своя схема соединений элементов;<br>
-	между формулами представления булевых функций и схемами, их реализующими, существует взаимно однозначное соответствие. <br>
Очевидно, среди схем, реализующих данную функцию, есть наиболее простая. Поиск логической формулы, соответствующей этой схеме, представляет большой практический интерес. Преобразование формул булевых функций основано на использовании соотношений булевой алгебры.<br>

<b>Основные законы алгебры логики</b><br>
Основные законы алгебры логики позволяют проводить эквивалентные преобразования логических функций, записанных с помощью операций И, ИЛИ, НЕ, приводить их к удобному для дальнейшего использования виду и упрощать запись.<br>
При выполнении преобразований функций алгебры логики могут быть полезны следующие соотношения:<br>
-	всегда истинны высказывания:       x + 1=1;      <span class="overline">x</span> + x=1;   <br>
-	всегда ложны высказывания:          x * 0=0;      <span class="overline">x</span> * x=0;   <br>
-	правило двойного отрицания          <span class="overline"><span class="overline">х</span></span>=х;<br>
-	правило повторения                          x + x + … + x=x;<br>
                                                                  x  *  x  * …  * x =x.<br>
Переместительный закон:<br>
-	для дизъюнкции      x1+x2 = x2+x1;<br>
-	для конъюнкции      x1*x2 = x2*x1;<br>
-	для суммы по модулю два  x1&oplus;x2 = x2&oplus;x1.<br>
Сочетательный закон:<br>
-	для дизъюнкции      x1+(x2+x3)=(x1+x2)+x3;<br>
-	для конъюнкции      x1*(x2*x3)= (x1*x2)*x3;<br>
-	для суммы по модулю два  x1&oplus;(x2&oplus;x3) = (x1&oplus;x2)&oplus;x3,<br>
то есть группирование переменных внутри дизъюнкции (конъюнкции) не изменяет значений функции.<br>
Распределительный закон:<br>
-	для дизъюнкции      x1+x2**x3=(x1+x2)(x1+x3),<br>
то есть дизъюнкция переменной и конъюнкции эквивалентна конъюнкции дизъюнкций этой переменной с сомножителями;<br>
-	для конъюнкции      x1*(x2+x3)= x1*x2+x1*x3,<br>
то есть конъюнкция переменной и дизъюнкции равносильна дизъюнкции конъюнкций этой переменной со слагаемыми.<br>
Закон инверсии (правило де Моргана):<br>
-	для дизъюнкции     <span class="overline"> x1+x2</span>=<span class="overline">x2</span> * <span class="overline">x1</span>;<br>
-	для конъюнкции      <span class="overline">x1*x2</span>=<span class="overline">x2</span>+<span class="overline">x1</span>,<br>
то есть отрицание дизъюнкции (конъюнкции) переменных равно конъюнкции (дизъюнкции) отрицаний этих переменных.<br>
Правило де Моргана справедливо для любого числа переменных:<br>
<span class="overline">x1+x2+…+xn</span>= <span class="overline">x1</span> * <span class="overline">x2</span> * … * <span class="overline">xn</span>,<br>
<span class="overline">x1*x2*…*xn</span>= <span class="overline">x1</span> + <span class="overline">x2</span> + … * <span class="overline">xn</span>.<br>
Переместительный и сочетательный законы для дизъюнкции и конъюнкции, а также распределительный закон для конъюнкции совпадают с законами обычной алгебры. Но в обычной алгебре нет законов, аналогичных распределительному для дизъюнкции и законам инверсии. Их справедливость доказывается посредством составления таблиц истинности для левой и правой частей формулы.<br>
Правило склеивания x1?x2+x1?<span class="overline">x2</span>=x1.<br>
Следующие соотношения могут быть выведены из рассмотренных выше:<br>
x1+x1*x2 = x1 ;<br>
x1+x1*x2 = x1*1 +x1*x2 = x1 *(1 + x2) = x1*1 = x1;<br>
x1 *(x1&oplus;x2) = x1.<br>

<b>Формы представления функций алгебры логики</b><br>
Основными понятиями, лежащими в основе представления булевых функций в различных формах, являются понятия элементарной конъюнкции и элементарной дизъюнкции.<br>
Элементарной конъюнкцией называется логическое произведение любого конечного числа различных между собой булевых переменных, взятых со знаком инверсии или без него. <br>
Например, логические выражения вида   x1x2x3 , x1x4 , x1x2x4   являются элементарными конъюнкциями, а выражения вида   x1x2x3 , x1x4 , x1x2x4  не являются элементарными конъюнкциями.<br>
Элементарной дизъюнкцией называется логическая сумма любого конечного числа различных между собой булевых переменных, взятых со знаком инверсии или без него <br>
Примером логического выражения, являющегося элементарной дизъюнкцией, могут служить  x1+x2+x3 , x1+x4 , x1+x2+x4  , а выражения вида x1+x2+x3, x1+x4 , x1+x2+x4  не являются элементарными дизъюнкциями.<br>
Дизъюнктивной нормальной формой (ДНФ) булевой функции на-зывается дизъюнкция конечного числа элементарных конъюнкций.<br>
 
Число переменных, входящих в элементарную конъюнкцию, определяет ранг этой конъюнкции. <br>
Совершенной ДНФ (СДНФ) логической функции от n аргументов называется такая ДНФ, в которой все конъюнкции имеют ранг n. СДНФ записывается по таблице истинности согласно правилу:<i> для каждого набора переменных, на котором булева функция принимает единичное значение, записывается конъюнкция ранга n и все эти конъюнкции объединяются дизъюнктивно; переменная имеет знак инверсии, если на соответствующем наборе имеет нулевое значение. </i></p>
<img src="../../images/lk12/6.jpg">
<p>
Элементарные конъюнкции, образующие СДНФ, называют также конституентами (составляющими) единицы (минтерм), так как они соответствуют наборам, при которых функция принимает значение, равное единице. Построение СДНФ по таблице истинности называют составлением булевой функции по условиям истинности.
Конъюнктивной нормальной формой (КНФ) булевой функции называется конъюнкция конечного числа элементарных дизъюнкций.</p>
<img src="../../images/lk12/7.jpg">
<p>
Совершенной КНФ (СКНФ) логической функции от n аргументов называется такая КНФ, в которой все дизъюнкции имеют ранг n. СКНФ записывается по таблице истинности согласно правилу: для каждого набора переменных, на котором булева функция принимает нулевое значение, записывается дизъюнкция ранга n и все эти дизъюнкции объединяются конъюнктивно; переменная имеет знак инверсии, если на соответствующем наборе имеет единичное значение. </p>
<img src="../../images/lk12/8.jpg">
<p>
Элементарные дизъюнкции, образующие СКНФ, называют конституентами (составляющими) нуля (макстерм), так как они соответствуют наборам, при которых функция принимает нулевое значение. Построение СКНФ по таблице истинности называют составлением булевой функции по условиям ложности.</p>
<img src="../../images/lk12/9.jpg">
<p>
Таким образом, любая булева функция может быть представлена суперпозицией конъюнкции, дизъюнкции и отрицания. Разложение по всем переменным в дизъюнкцию называется совершенной дизъюнктивной нормальной формой функции, а в конъюнкцию – совершенной конъюнктивной нормальной формой. Совершенная дизъюнктивная и конъюнктивная нормальная формы дают способ представления булевой функции через суперпозицию конъюнкции, дизъюнкции и отрицания. <br>
Чтобы получить совершенную дизъюнктивную нормальную форму, надо взять все наборы, на которых значение функции равно 1, и записать для каждого из них конъюнкцию переменных и их отрицаний. Если в наборе значение переменной равно 0, то переменную надо взять с отрицанием, если 1 – без отрицания. Из получившихся конъюнкций надо построить дизъюнкцию. <br>
Чтобы получить совершенную конъюнктивную нормальную форму, надо взять все наборы, на которых значение функции равно 0, и записать для каждого из них дизъюнкцию переменных и их отрицаний. Если в наборе значение переменной равно 0, то переменную надо взять без отрицания, если 1 – с отрицанием. Из получившихся дизъюнкций надо построить конъюнкцию. 
</p>
</BODY>
</HTML>