<!-- (C) 2004-06 Nick G Shchetko, Anatoly A Matveev for Military Faculty, BSUIR -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">
<link href="../../css/style.css" rel="stylesheet" type="text/css">
<title>Лекция №8</title>
<base target="_top">
</HEAD><BODY>
<div align="center">
  <p><strong>Тема № 8 &quot; Машинные методы деления чисел  &quot; </strong></p>
</div>
<strong> <p>Вопросы:</p> </strong>
<p>
- Методы деления чисел в ЭВМ (в прямых и дополнительных кодах).<br>
- Структурная схема операционного автомата для деления чисел. <br>
- Ускорение операции деления чисел в ЭВМ. <br>

</p>
<strong> <p>Машинные методы деления</p> </strong>
<p>
Деление - простое многократное вычитание делителя вначале из делимого, затем из остатков. Введем обозначения,
используемые ниже: Дм - делимое, Дт - делитель, А<sub>i</sub> – очередной (i-й) остаток, Чт – частное. Известны два
основных подхода к операции деления: <br>
- с восстановлением остатков;<br>
- без восстановления остатков.<br>
Независимо от метода деления после каждого вычитания делителя формируется цифра частного. Операция деления
является операцией, дающей не  всегда точный результат. Поэтому признаком окончания операции деления может
быть достижение заданной точности (по числу сдвиговых сигналов). Если при выполнении деления получен нулевой
i-й остаток, то деление прекращается и в оставшиеся разряды частного записываются нули. Первым шагом деления
двух чисел машиной является пробное вычитание, выявляющее соотношение между делимым и делителем. При делении
в случае переполнения следует: для чисел с фиксированной запятой процесс остановить, с плавающей запятой
продолжить до конца, а потом, после получения последней n-й цифры частного, число сдвигается вправо на один
разряд с добавлением единицы к порядку, равному разности порядков делимого и делителя.<br><br></p>
<strong> <p>Деление чисел в прямых кодах</p> </strong>
<p>
<i>Алгоритм деления с восстановлением остатка</i> состоит в следующем.<br>
1. Выполняется пробное вычитание с формированием первого остатка A<sub>1</sub>=[Дм]<sub>доп</sub>+[-Дт]<sub>доп</sub>. Далее, если А<sub>1</sub> &lt 0, то в 
первый разряд, расположенный слева от запятой, заносится ноль (0), иначе единица (1) – переполнение и переход к
пункту 5.<br>
2. Если А<sub>i</sub> &lt 0, то восстанавливаем предыдущий остаток A<sub>i</sub>=A<sub>i</sub>+[Дт]<sub>доп</sub>.<br>
3. Формирование очередного остатка.  A<sub>i+1</sub>=A<sub>i</sub>*2+[-Дт]<sub>доп</sub>  если A<sub>i+1</sub> &lt 0, то в очередной разряд частного справа от запятой
 записывается ноль (Чт(n)=0), иначе записывается единица (Чт(n)=1).<br>
4. Если достигнута заданная точность частного или получен нулевой остаток A<sub>i+1</sub>, то процесс деления окончен и 
осуществляется переход к пункту 5, иначе переходим к пункту 2 алгоритма.<br>
5. Окончание алгоритма.<br>
Из рассмотренного алгоритма видно следующее: <br>
1) необходимо затрачивать время на восстановление остатка;<br>
2) процесс деления нерегулярный, в зависимости от делимого и делителя частное будет содержать нулей больше или
меньше, и чем больше нулей, тем больше требуется времени на восстановление остатков. <br>
	Рассмотрим пример деления чисел.
</p>
<img src="../../images/lk8/1.jpg">
<p>Как видно из примера, для получения остатка А<sub>i+2</sub> необходимо выполнить</p>
<img src="../../images/lk8/2.jpg">
<p>
Из этого следует, что восстанавливать остаток необязательно. Достаточно сдвинуть полученный отрицательный остаток
влево на один разряд и добавить делитель. Это является основой алгоритма для выполнения деления без восстановления
остатка. <br>
Алгоритм деления без восстановления остатка.<br>
1. Выполняется пробное вычитание с формированием первого остатка A<sub>1</sub>=[Дм]<sub>доп</sub>+[-Дт]<sub>доп</sub>. Далее, если А<sub>1</sub> &lt 0, то в
первый разряд, расположенный слева от запятой, заносится ноль (0), иначе единица (1) – что является признаком
переполнение и ос4уществляется переход к пункту 5.<br>
2. Формирование очередного остатка. Если А<sub>i</sub> &lt 0, то A<sub>i+1</sub>=A<sub>i</sub>*2+[Дт]<sub>доп</sub>, иначе A<sub>i+1</sub>=A<sub>i</sub>*2+[-Дт]<sub>доп</sub>.
3. Если А<sub>i+1</sub> &lt 0, то в очередной разряд частного справа от запятой записывается ноль (Чт(n)=0), иначе записывается
единица (Чт(n)=1).<br>
4. Если достигнута заданная точность частого или получен нулевой остаток A<sub>i+1</sub>, то процесс деления окончен и
осуществляется переход к пункту 5, иначе переходим к пункту 2 алгоритма.<br>
5. Окончание алгоритма.<br></p>
<img src="../../images/lk8/3.jpg">
<p>
<strong> <p>Деление чисел в дополнительных кодах</p></strong> 
<p>
При делении чисел знаковая и значащая части частного формируются раздельно. Знак частного формируется согласно формуле
Знак Чт = Знак Дм &oplus; Знак Дт.<br>
Основой деления чисел в дополнительных кодах является деление без восстановления остатка. В отличие от деления в прямых
кодах, здесь как для определения цифры частного, так и для определения действия сравнивается знак делимого (остатка) со
знаком делителя. <br>
Ниже приведен алгоритм деления чисел в дополнительных кодах.<br>
1. Выполняется пробное вычитание: если знак Дм &ne; знаку Дт, то первый остаток A<sub>1</sub>=[Дм]<sub>доп</sub>+[Дт]<sub>доп</sub>, иначе A<sub>1</sub>=[Дм]<sub>доп</sub>+[-Дт]<sub>доп</sub>.<br>
Далее формируется первый разряд, расположенный слева от запятой - ноль (0), если знак А<sub>1</sub> &ne; знаку Дт, иначе единица (1).<br>
2. Формирование очередного остатка. Если знак А<sub>i</sub> &ne; знаку Дт, то A<sub>i+1</sub>=A<sub>i</sub>*2+[Дт]<sub>доп</sub>, иначе A<sub>i+1</sub>=A<sub>i</sub>*2+[-Дт]<sub>доп</sub>.<br>
3. Если знак А<sub>i+1</sub> &ne; знаку Дт, то в очередной разряд частного справа от запятой заносится ноль (Чт(n)=0), иначе - единица
(Чт(n)=1).<br>
4. Если достигнута заданная точность частого или получен нулевой остаток A<sub>i+1</sub>, то процесс деления окончен, иначе переходим
к пункту 2 алгоритма.<br></p>
<img src="../../images/lk8/4.jpg">
<strong> <p>Методы ускорения деления</p></strong> 
<p>
Логические методы основываются на анализе остатка, по виду которого можно сформировать несколько цифр частного в пределах
одного такта.<br>
При этом Дт выбирается (формируется) таким образом, чтобы после запятой шла единица, то есть он нормализован. Если очередной
остаток получился настолько мал, что после запятой следует r+1 нулей, то в частное может быть записано r ”0” или ”1”, а остаток
может быть сдвинут на r разрядов влево.<br>
Итак, для осуществления названных методов ускорения кроме устройства управления делением требуется логическая схема, осуществляющая
две функции:<br>
1)	сдвиг модулей делителя и делимого до тех пор, пока у модуля делителя после запятой не останется ни одного нуля;<br>
2)	выявление остатков вида 0,0…01 или 1,1…10.<br>
Степень сложности логической схемы определяется количеством разрядов, участвующих в косвенном сравнении модулей делителя
и делимого (остатков).<br>
Обычно реализация логических методов ускорения при делении несколько сложнее, чем при умножении. При делении необходимо
либо каждый остаток переводить в прямой код, либо, если остаток оставить в дополнительном коде, анализировать два разряда
одновременно 0,0… или 1,1… .<br></p>
</BODY>
</HTML>